// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address, a=outA, b=outB, c=outC, d=outD, e=outE, f=outF, g=outG, h=outH);

    Register(in=in, load=outA, out=outRegisterA);
    Register(in=in, load=outB, out=outRegisterB);
    Register(in=in, load=outC, out=outRegisterC);
    Register(in=in, load=outD, out=outRegisterD);
    Register(in=in, load=outE, out=outRegisterE);
    Register(in=in, load=outF, out=outRegisterF);
    Register(in=in, load=outG, out=outRegisterG);
    Register(in=in, load=outH, out=outRegisterH);

    Mux8Way16(a=outRegisterA, b=outRegisterB, c=outRegisterC, d=outRegisterD, e=outRegisterE, f=outRegisterF, g=outRegisterG, h=outRegisterH, sel=address, out=out);
}